@using MudBlazor
@using BlazorSerial.Services
@inject SerialPortService SerialPorts
<MudDynamicTabs Class="fill-screen" Elevation="4" Rounded="true" ApplyEffectsToContainer="true" AddTab="AddTabCallback" CloseTab="@(CloseTabCallback)" @bind-ActivePanelIndex="index" AddIconToolTip="Click here to add a new tab" CloseIconToolTip="Close this tab. All data will be lost">
	@foreach (var item in tabs)
	{
	 <MudTabPanel Class="fill-screen" Text="@item.DisplayName" Tag="@item.Guid" ><TabPage SerialPort=@item /></MudTabPanel>
	}
</MudDynamicTabs>

@code {

	private List<SerialPort> tabs = new();
	private int index = 0;
	private bool updateIndex = false;

	protected override void OnInitialized()
	{
		base.OnInitialized();
		foreach (var serialPort in SerialPorts.GetSerialPorts())
		{
			tabs.Add(serialPort);
		}
	}

	private void AddTabCallback()
	{
		tabs.Add(new SerialPort() {DisplayName = "New Port"});
	//the tab becomes available after it is rendered. Hence, we can't set the index here
		updateIndex = true;
	}

	private void CloseTabCallback(MudTabPanel panel)
	{
		var tabView = tabs.FirstOrDefault(x => x.Guid == (Guid)panel.Tag);
		if(tabView != null)
		{
			tabs.Remove(tabView);
		}
	}

	protected override void OnAfterRender(bool firstRender)
	{
		if(updateIndex)
		{
			index = tabs.Count - 1;
			StateHasChanged();
			updateIndex = false;
		}
	}
}